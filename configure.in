dnl Process this file with autoconf to produce a configure script.

dnl initialisation
AC_INIT(gltron.c)
AM_INIT_AUTOMAKE(gltron, 0.61am)

dnl Checks for programs.
AC_PROG_CC
AC_PROG_CPP
AC_EXEEXT

dnl CFLAGS set-up
CFLAGS=""

AC_ARG_ENABLE(warn,
[ --enable-warn                Enable compiler warnings [default=on]],
	enable_warn=$enableval, enable_warn=yes)
if test "x$enable_warn" = xyes; then
	CFLAGS="$CFLAGS -Wall"
fi

AC_ARG_ENABLE(debug,
[ --enable-debug               Enable debugging [default=off]],
	enable_debug=$enableval, enable_debug=off)
if test "x$enable_debug" = xyes; then
	CFLAGS="$CFLAGS -g3"
fi

AC_ARG_ENABLE(profile,
[ --enable-profile             Enable profiling [default=off]],
	enable_profile=$enableval, enable_profile=off)
if test "x$enable_profile" = xyes; then
	if test "x$GCC" = xyes; then
		CFLAGS="$CFLAGS -pg"
	else
		CFLAGS="$CFLAGS -p"
	fi
fi

AC_ARG_ENABLE(optimize,
[ --enable-optimize=[level]    Enable optimization [default=2]],
	enable_optmize=$enableval, enable_optimize=2)
if test "x$enable_optimize" ; then
	CFLAGS="$CFLAGS -O$enable_optimize"
fi

dnl library checks
AM_PATH_SDL(1.1.0, CFLAGS="$CFLAGS $SDL_CFLAGS"; LIBS="$LIBS $SDL_LIBS",
	AC_MSG_ERROR(SDL is not installed))
AC_CHECK_LIB(GL, main,, AC_MSG_ERROR(OpenGL is not installed))
AC_CHECK_LIB(png, png_read_info,, AC_MSG_ERROR(libpng is not installed))

dnl sound set-up
AC_ARG_ENABLE(sound,
[ --disable-sound              Don't compile in sound [default=off]],
   use_sound=no, use_sound=yes)
if test "x$use_sound" = xyes; then
	AC_CHECK_LIB(SDL_mixer, Mix_OpenAudio,
	CFLAGS="$CFLAGS -DSOUND";
	LIBS="$LIBS -lSDL_mixer";
	SOUND_OBJS="sound.o sound3d.o",
	AC_MSG_WARN(SDL_mixer not found - disabling sound))
	AC_SUBST(SOUND_OBJS)
fi

dnl use udp instead of tcp
AC_ARG_ENABLE(udp,
[ --enable-udp             Use udp in stead of tcp [default=off]],
	enable_udp=$enableval, enable_udb=no)
if test "x$enable_udp" = xyes; then
	AC_CHECK_LIB(SDL_net, SDLNet_Init,
	CFLAGS="$CFLAGS -DUSEUDP";
	enable_network=yes)
fi

dnl network set-up
AC_ARG_ENABLE(network,
[ --enable-network             Experimental network mode [default=on]],
	enable_network=$enableval, enable_network=yes)
if test "x$enable_network" = xyes; then
	AC_CHECK_LIB(SDL_net, SDLNet_Init,
	CFLAGS="$CFLAGS -D__NETWORK__";
	LIBS="$LIBS -lSDL_net";
	NETWORK_OBJS="network.o netevent.o netpregame.o netconnect.o protocol.o scores.o netwait.o wtext.o record.o tracker.o tracker_protocol.o wlist.o wcontrols.o",
	AC_MSG_WARN(SDL_net not found - disabling network))
	AC_SUBST(NETWORK_OBJS)
fi


dnl header checks
AC_HEADER_STDC
AC_CHECK_HEADERS(unistd.h)

AC_CHECK_HEADERS(GL/gl.h,,
 AC_CHECK_HEADERS(/usr/X11R6/include/GL/gl.h,
	includes_in_x=1,
 AC_CHECK_HEADERS(/usr/local/include/GL/gl.h,
	includes_in_local=1,
AC_MSG_ERROR(cant find GL headers))))

dnl Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST

dnl Checks for library functions.
AC_CHECK_FUNCS(strstr)

AC_OUTPUT(Makefile \
	art/Makefile art/arcade_spots/Makefile art/biohazard/Makefile \
	art/default/Makefile  art/metalTron/Makefile \
	data/Makefile data/music/Makefile \
	sounds/Makefile tools/Makefile win32/Makefile)
